name: Code_Checks

on: [push, pull_request]

jobs:
    tests:
        runs-on: ubuntu-18.04
        strategy:
            matrix:
                php:
                    - '7.4'
                    - '8.0'
                vars:
                    - symfony_version: "~v4.4.0"
                      phpunit_bridge_version: "~v4.4.9"
                      dependencies: "high"
                    - symfony_version: "~v4.4.0"
                      phpunit_bridge_version: "~v4.4.9"
                      dependencies: "low"
                    - symfony_version: "~v5.2.0"
                      phpunit_bridge_version: "~v5.2.0"
                      dependencies: "high"
                    - symfony_version: "~v5.2.0"
                      phpunit_bridge_version: "~v5.2.0"
                      dependencies: "low"

        name: PHP ${{ matrix.php }} tests on Ubutnu
        steps:
            -   uses: actions/checkout@v2

            -   uses: shivammathur/setup-php@v2
                with:
                    php-version: ${{ matrix.php }}
                    coverage: none # disable xdebug, pcov

            -   uses: "actions/cache@v2"
                with:
                    path: "~/.composer/cache"
                    key: "php-${{ matrix.php }}-composer-locked-${{ hashFiles('composer.lock') }}"
                    restore-keys: "php-${{ matrix.php }}-composer-locked-"

            -   run: php ./composer-install.php "${{ matrix.vars.symfony_version }}" "${{ matrix.vars.dependencies }}" "--no-interaction --no-progress --prefer-dist" "${{ matrix.vars.phpunit_bridge_version }}"

            -   run: composer show

            -   run: vendor/bin/phpunit

    windows-tests:
        runs-on: windows-latest
        strategy:
            matrix:
                php:
                    - '7.4'
                vars:
                    - dependencies: "high"
                      composerExtraFlags: ''
                    - dependencies: "low"
                      composerExtraFlags: '--prefer-lowest'

        name: PHP ${{ matrix.php }} tests on Windows
        steps:
            -   uses: actions/checkout@v2

            -   uses: shivammathur/setup-php@v2
                with:
                    php-version: ${{ matrix.php }}
                    coverage: none # disable xdebug, pcov
                    extensions: 'curl'

            -   uses: "actions/cache@v2"
                with:
                    path: "~/.composer/cache"
                    key: "php-${{ matrix.php }}-composer-locked-${{ hashFiles('composer.lock') }}"
                    restore-keys: "php-${{ matrix.php }}-composer-locked-"

            -   run: composer update -a --prefer-dist -n ${{ matrix.vars.composerExtraFlags }}

            -   run: composer show

            -   run: vendor/bin/phpunit

    static_analysis:
        runs-on: ubuntu-18.04
        strategy:
            matrix:
                include:
                    - php: '7.4'
                      symfony_version: "~v4.4.0"
                      phpunit_bridge_version: "~v4.4.8"
                      dependencies: "high"

        name: Static analysis
        steps:
            -   uses: actions/checkout@v2

            -   uses: shivammathur/setup-php@v2
                with:
                    php-version: ${{ matrix.php }}
                    coverage: none # disable xdebug, pcov

            -   uses: "actions/cache@v2"
                with:
                    path: "~/.composer/cache"
                    key: "php-${{ matrix.php }}-composer-locked-${{ hashFiles('composer.lock') }}"
                    restore-keys: "php-${{ matrix.php }}-composer-locked-"

            -   run: php ./composer-install.php "${{ matrix.symfony_version }}" "${{ matrix.dependencies }}" "--no-interaction --no-progress --prefer-dist" "${{ matrix.phpunit_bridge_version }}"

            -   run: composer bin static-checks install -a --no-dev --no-interaction --no-progress --prefer-dist

            -   run: composer show

            -   run: composer crunz:analyze

            -   run: composer phpstan:check
